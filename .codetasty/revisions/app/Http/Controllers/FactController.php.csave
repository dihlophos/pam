codetasty.revision.2.0
{"ts":1501503566,"restoring":false,"user_id":4164,"patch":[{"diffs":[[1,"<?php\r\n\r\nnamespace App\\Http\\Controllers;\r\n\r\nuse Illuminate\\Http\\Request;\r\nuse App\\Models\\Fact;\r\nuse App\\Models\\Prevention;\r\nuse App\\Models\\DiagnosticTest;\r\nuse App\\Models\\Object;\r\nuse App\\Models\\BasicDocument;\r\nuse App\\Models\\Animal;\r\nuse App\\Models\\Service;\r\nuse App\\Models\\Executor;\r\nuse App\\Models\\PreparationReceipt;\r\nuse App\\Models\\ResearchType;\r\nuse App\\Http\\Requests\\StoreFact;\r\n\r\nclass FactController extends Controller\r\n{\r\n    /**\r\n    * Display a listing of the resource.\r\n    *\r\n    * @return \\Illuminate\\Http\\Response\r\n    */\r\n    public function index(Object $object)\r\n    {\r\n        $facts = $object->facts()->with('service')->orderBy('date', 'DESC')->paginate(50);\r\n\r\n        return view('facts.index', compact(['facts', 'object']));\r\n    }\r\n\r\n    /**\r\n    * Show the form for creating a new resource.\r\n    *\r\n    * @param  \\Illuminate\\Http\\Request  $request\r\n    * @return \\Illuminate\\Http\\Response\r\n    */\r\n    public function create(Object $object)\r\n    {\r\n        $basic_documents = BasicDocument::orderBy('name')->get()->pluck('name', 'id');\r\n        $animals = $object->animals()->with('animalType')->get();\r\n        dd($animals);\r\n        $services = Service::orderBy('name')->get();\r\n        $executors = Executor::orderBy('name')->get()->pluck('name', 'id');\r\n        $research_types = ResearchType::orderBy('name')->get()->pluck('name', 'id');\r\n        $preparation_receipts = $object->subdivision->preparation_receipts()->with('preparation')->get();\r\n        return view('facts.create',\r\n            compact(['object', 'basic_documents', 'animals', 'services', 'executors', 'preparation_receipts', 'research_types'])\r\n        );\r\n    }\r\n\r\n    /**\r\n    * Store a newly created resource in storage.\r\n    *\r\n    * @param  \\Illuminate\\Http\\Request  $request\r\n    * @return \\Illuminate\\Http\\Response\r\n    */\r\n    public function store(Object $object, StoreFact $request)\r\n    {\r\n        //array_filter setting empty field to null; for strings only\r\n        //$data = array_filter($request->all(), 'strlen');\r\n        $data = $request->all();\r\n        //TODO:\r\n        $fact = Fact::create($data);\r\n        if (isset($data['diseases']))\r\n        {\r\n            $fact->diseases()->attach($data['diseases']);\r\n        }\r\n        $data['fact_id'] = $fact->id;\r\n        switch ($fact->service->tab_index)\r\n        {\r\n            case 1:\r\n                $prevention = Prevention::create($data);\r\n                break;\r\n            case 2:\r\n                $diagnostic_test = DiagnosticTest::create($data);\r\n                break;\r\n            case 3:\r\n                break;\r\n        }\r\n        $request->session()->flash('alert-success', 'Запись успешно добавлена!');\r\n        return redirect()->route('object.fact.index', $object);\r\n    }\r\n\r\n    /**\r\n    * Display the specified resource.\r\n    *\r\n    * @param  int  $id\r\n    * @return \\Illuminate\\Http\\Response\r\n    */\r\n    public function show($id)\r\n    {\r\n        //\r\n    }\r\n\r\n    /**\r\n    * Show the form for editing the specified resource.\r\n    *\r\n    * @param  int  $id\r\n    * @return \\Illuminate\\Http\\Response\r\n    */\r\n    public function edit(Object $object, Fact $fact)\r\n    {\r\n        //TODO:\r\n        return view('facts.edit',\r\n            compact(['fact', 'municipalities', 'cities'])\r\n        );\r\n    }\r\n\r\n    /**\r\n    * Update the specified resource in storage.\r\n    *\r\n    * @param  \\Illuminate\\Http\\Request  $request\r\n    * @param  int  $id\r\n    * @return \\Illuminate\\Http\\Response\r\n    */\r\n    public function update(Object $object, StoreFact $request, Fact $fact)\r\n    {\r\n        //array_filter setting empty field to null; for strings only\r\n        //$data = array_filter($request->all(), 'strlen');\r\n        $data = $request->all();\r\n        $fact->fill($data)->save();\r\n        $request->session()->flash('alert-success', 'Запись успешно обновлена!');\r\n        return redirect()->route('object.fact.index', $object);\r\n    }\r\n\r\n    /**\r\n    * Remove the specified resource from storage.\r\n    *\r\n    * @param  int  $id\r\n    * @return \\Illuminate\\Http\\Response\r\n    */\r\n    public function destroy(Object $object, Request $request, Fact $fact)\r\n    {\r\n        $fact->delete();\r\n        $request->session()->flash('alert-success', 'Запись успешно удалена!');\r\n        return redirect()->route('object.fact.index', $object);\r\n    }\r\n}\r\n"]],"start1":0,"start2":0,"length1":0,"length2":4320}],"length":4320}
{"ts":1501503626,"restoring":false,"user_id":4164,"patch":[{"diffs":[[0,");\r\n"],[-1,"        dd($animals);\r\n"],[0,"    "]],"start1":1126,"start2":1126,"length1":31,"length2":8}],"length":4297}