codetasty.revision.2.0
{"ts":1502196878,"restoring":false,"user_id":4164,"patch":[{"diffs":[[1,"<?php\n\nnamespace App\\Http\\Controllers;\n\nuse Illuminate\\Http\\Request;\nuse App\\Models\\Service;\nuse App\\Models\\Measure;\nuse App\\Models\\ServiceCategory;\nuse App\\Models\\ServiceType;\nuse App\\Http\\Requests\\StoreService;\n\nclass ServiceController extends Controller\n{\n    /**\n     * Display a listing of the resource.\n     *\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function index()\n    {\n        $services = Service::orderBy('name')->paginate(50);\n        $measures = Measure::orderBy('name')->pluck('name', 'id');\n        $service_categories = ServiceCategory::orderBy('name')->pluck('name', 'id');\n        $service_types = ServiceType::orderBy('name')->pluck('name', 'id');\n        $tabs = Service::tabs();\n        return view(\n                    'lists.services.index',\n                    compact([ 'services', 'measures', 'tabs', 'service_categories'])\n                );\n    }\n\n    /**\n     * Show the form for creating a new resource.\n     *\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function create()\n    {\n        //\n    }\n\n    /**\n     * Store a newly created resource in storage.\n     *\n     * @param  \\Illuminate\\Http\\Request  $request\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function store(StoreService $request)\n    {\n        $service = Service::create($request->all());\n        $request->session()->flash('alert-success', 'Запись успешно добавлена!');\n        return redirect()->route('service.index');\n    }\n\n    /**\n     * Display the specified resource.\n     *\n     * @param  int  $id\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function show($id)\n    {\n        //\n    }\n\n    /**\n     * Show the form for editing the specified resource.\n     *\n     * @param  int  $id\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function edit($id)\n    {\n        //\n    }\n\n    /**\n     * Update the specified resource in storage.\n     *\n     * @param  \\Illuminate\\Http\\Request  $request\n     * @param  int  $id\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function update(StoreService $request, Service $service)\n    {\n        $service->fill($request->all())->save();\n        $request->session()->flash('alert-success', 'Запись успешно обновлена!');\n        return redirect()->route('service.index');\n    }\n\n    /**\n     * Remove the specified resource from storage.\n     *\n     * @param  int  $id\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function destroy(Request $request, Service $service)\n    {\n        $service->delete();\n        $request->session()->flash('alert-success', 'Запись успешно удалена!');\n        return redirect()->route('service.index');\n    }\n}\n"]],"start1":0,"start2":0,"length1":0,"length2":2681}],"length":2681}
{"ts":1502196888,"restoring":false,"user_id":4164,"patch":[{"diffs":[[0,"egories'"],[1,", 'service_types'"],[0,"])\n     "]],"start1":859,"start2":859,"length1":16,"length2":33}],"length":2698}
{"ts":1502196996,"restoring":false,"user_id":4164,"patch":[{"diffs":[[0,"all());\n"],[1,"        $service->service_types()->attach($request->service_types);\n"],[0,"        "]],"start1":1344,"start2":1344,"length1":16,"length2":84}],"length":2766}