codetasty.revision.2.0
{"ts":1501669988,"restoring":false,"user_id":4164,"patch":[{"diffs":[[1,"<?php\r\n\r\nnamespace App\\Models;\r\n\r\nuse Illuminate\\Database\\Eloquent\\Model;\r\n\r\n/*\r\n\tТип:\r\n\t\tФакт\r\n\r\n\tПоля:\r\n\t\tОбъект\r\n\t\tПервичный документ\r\n        Код записи сведений о животном\r\n        Услуга\r\n        Дата\r\n*/\r\nclass Fact extends Model\r\n{\r\n    /**\r\n    * Массово присваиваемые атрибуты.\r\n    *\r\n    * @var array\r\n    */\r\n    protected $fillable = ['object_id', 'basic_document_id', 'animal_id',\r\n                           'service_id', 'date'];\r\n\r\n    public function object()\r\n    {\r\n        return $this->belongsTo(Object::class);\r\n    }\r\n\r\n    public function basic_document()\r\n    {\r\n        return $this->belongsTo(BasicDocument::class);\r\n    }\r\n\r\n    public function animal()\r\n    {\r\n        return $this->belongsTo(Animal::class);\r\n    }\r\n\r\n    public function service()\r\n    {\r\n        return $this->belongsTo(Service::class);\r\n    }\r\n\r\n    public function diseases()\r\n    {\r\n        return $this->belongsToMany(Disease::class);\r\n    }\r\n    \r\n    public function prevention() {\r\n        return $this->hasOne(Prevention::class);\r\n    }\r\n    \r\n    public function diagnostic_test() {\r\n        return $this->hasOne(DiagnosticTest::class);\r\n    }\r\n}\r\n"]],"start1":0,"start2":0,"length1":0,"length2":1157}],"length":1157}
{"ts":1501676544,"restoring":false,"user_id":4164,"patch":[{"diffs":[[0,"ect_id',"],[1," 'executor_id',"],[0," 'basic_"]],"start1":353,"start2":353,"length1":16,"length2":31},{"diffs":[[0,", 'date'"],[1,", 'comment'"],[0,"];\r\n\r\n  "]],"start1":451,"start2":451,"length1":16,"length2":27}],"length":1183}
{"ts":1503051448,"restoring":false,"user_id":4164,"patch":[{"diffs":[[0,"comment'"],[1,", 'service_type_id'"],[0,"];\r\n\r\n  "]],"start1":462,"start2":462,"length1":16,"length2":35}],"length":1202}
{"ts":1503052002,"restoring":false,"user_id":4164,"patch":[{"diffs":[[0,":class);\r\n    }\r"],[1,"\n    \r\n    public function service_type()\r\n    {\r\n        return $this->belongsTo(ServiceType::class);\r\n    }\r"],[0,"\n\r\n    public fu"]],"start1":873,"start2":873,"length1":32,"length2":142}],"length":1312}